#!/bin/tcsh -f

if ($# != 4) then
	echo "Arg1 --> phonetic_file"
	echo "Arg2 --> C_list"
	echo "Arg3 --> V_list"
	echo "Arg4 --> CV_list"
	exit(-1)
endif

#rm data/file1
#rm data/file2
#rm data/temp_syl.lab
cat $1 | cut -d " " -f3 | grep -v sil > allphones

set num_c = `cat allphones |wc -w`
set st = 1

#--------To remove the fist phone if it is a vowel
set first_phone = `head -1 allphones`

set numv = `grep -c -x $first_phone $3`
if ($numv > 0) then
        set st = 2
endif
#------------------
while ($st <= $num_c)
	set cha = `cat allphones |head -$st |tail -1`
	set p = 0
	set p = `grep -w $cha $2 |wc -l` # To check the 1st char is c
	if ($p == 1) then	# To check for c followed by
		@ start1 = $st + 1
		set char = `cat allphones |head -$start1 |tail -1`
		@ start2 = $st + 3
		set cha4 = `cat allphones |head -$start2 |tail -1`
		set q = 0
		set q1 = 0
		set q = `grep -w $char $3 |wc -l`	# Checks 2nd char is v	
		set q1 = `grep -w $cha4 $3 |wc -l`
		if (($q == 1) && ($st <= $num_c - 1)) then		
			echo ME $cha$char $cha $char >>data/file1 #CV
			@ st = $st + 1
		endif
	endif
	@ st++
end
cp $1 data/temp_syl.lab
HLEd data/file1 data/temp_syl.lab	
cat data/temp_syl.lab | cut -d " " -f3 | grep -v sil > phones

set num_char = `cat phones |wc -w`

set start = 1

while ($start <= $num_char)
	set char1 = `cat phones |head -$start |tail -1`
	set a0 = 0
	set b0 = 0
	set c0 = 0
	set a0 = `grep -w $char1 $2 |wc -l` # To check the 1st char is uyir
	set b0 = `grep -w $char1 $3 |wc -l` # To check the 1st char is mei
	set c0 = `grep -w $char1 $4 |wc -l` # To check the 1st char is uyirmei
	if ($a0 == 1) then	# To check for V followed by
		@ start1 = $start + 1
		set char2 = `cat phones |head -$start1 |tail -1`
		@ start2 = $start + 2
		set char3 = `cat phones |head -$start2 |tail -1`
		@ start3 = $start + 3
		set char4 = `cat phones |head -$start3 |tail -1`
		@ start4 = $start + 4
                set char5 = `cat phones |head -$start4 |tail -1`
		set a1 = 0
		set a2 = 0
		set a3 = 0
		set a4 = 0
		set a5 = 0
		set a6 = 0
		set a1 = `grep -w $char2 $3 |wc -l`	# Checks 2nd char is mei	
		set a2 = `grep -w $char3 $3 |wc -l`	# Checks 3rd char is mei
		set a3 = `grep -w $char2 $4 |wc -l`	# Checks 2nd char is uyirmei
		set a4 = `grep -w $char3 $4 |wc -l`	# Checks 3rd char is uyirmei
		set a5 = `grep -w $char4 $3 |wc -l`	# Checks 4th char is mei
		set a6 = `grep -w $char5 $3 |wc -l`	# Checks 5th char is mei
		if (($a1 == 1 && $a2 == 1 && $a5 == 1 && $a6 == 1) && ($start <= $num_char - 4)) then	# Check for VCCCC unit eg. armst in armstrong
			echo RE $char1$char2$char3$char4$char5 $char1 $char2 $char3 $char4 $char5 >>data/file2
			@ start = $start + 5
		else if (($a1 == 1 && $a2 == 1 && $a5 == 1) && ($start <= $num_char - 3)) then	# Check for VCCC unit eg. arms
			echo RE $char1$char2$char3$char4 $char1 $char2 $char3 $char4 >>data/file2
			@ start = $start + 4
		else if (($a1 == 1 && $a2 == 1) && ($start <= $num_char - 2)) then		# Check for VCC unit eg. arm
			echo RE $char1$char2$char3 $char1 $char2 $char3 >>data/file2
			@ start = $start + 3
		else if (($a1 == 1) && ($start <= $num_char - 1)) then		# Check for VC unit eg. an
			echo RE $char1$char2 $char1 $char2 >>data/file2
			@ start = $start + 2
		else 
			echo RE $char1 $char1 >>data/file2			# If V is followed by another CV or V displays V unit alone.
			@ start++
		endif	
	else if ($b0 == 1) then					# To check for C followed by
		@ start1 = $start + 1
                set char2 = `cat phones |head -$start1 |tail -1`
                @ start2 = $start + 2
                set char3 = `cat phones |head -$start2 |tail -1`
                @ start3 = $start + 3
                set char4 = `cat phones |head -$start3 |tail -1`
		@ start4 = $start + 4
		set char5 = `cat phones |head -$start4 |tail -1`
		@ start5 = $start + 5
		set char6 = `cat phones |head -$start5 |tail -1`
                set b1 = 0
                set b2 = 0
                set b3 = 0
                set b4 = 0
                set b5 = 0
		set b6 = 0
		set b7 = 0
                set b1 = `grep -w $char2 $3 |wc -l`	# Checks 2nd char is mei
                set b2 = `grep -w $char2 $4 |wc -l`	# Checks 2nd char is uyirmei
		set b3 = `grep -w $char3 $3 |wc -l`	# Checks 3rd char is mei
                set b4 = `grep -w $char3 $4 |wc -l`	# Checks 3rd char is uyirmei
                set b5 = `grep -w $char4 $3 |wc -l`	# Checks 4th char is mei
                set b6 = `grep -w $char5 $3 |wc -l`	# Checks 5th char is mei
		set b7 = `grep -w $char6 $3 |wc -l`	# Checks 6th char is mei
		if (($b1 == 1 && $b4 == 1 && $b5 == 1) && ($start <= $num_char - 3)) then      		# Check for CCCVC unit eg. skrIn
                        echo RE $char1$char2$char3$char4 $char1 $char2 $char3 $char4 >>data/file2
                        @ start = $start + 4               
		else if (($b1 == 1 && $b4 == 1) && ($start <= $num_char - 2)) then      		# Check for CCCV unit eg. skrU
                        echo RE $char1$char2$char3 $char1 $char2 $char3 >>data/file2
                        @ start = $start + 3
                else if (($b2 == 1 && $b3 == 1 && $b5 == 1 && $b6 == 1 && $b7 == 1) && ($start <= $num_char - 5)) then		# Check for CCVCCCC unit
                        echo RE $char1$char2$char3$char4$char5$char6 $char1 $char2 $char3 $char4 $char5 $char6 >>data/file2
                        @ start = $start + 6
                else if (($b2 == 1 && $b3 == 1 && $b5 == 1 && $b6 == 1) && ($start <= $num_char - 4)) then			# Check for CCVCCC unit eg. spOrTs
                        echo RE $char1$char2$char3$char4$char5 $char1 $char2 $char3 $char4 $char5 >>data/file2
                        @ start = $start + 5
                else if (($b2 == 1 && $b3 == 1 && $b5 == 1) && ($start <= $num_char - 3)) then					# Check for CCVCC unit eg. spArk
			echo RE $char1$char2$char3$char4 $char1 $char2 $char3 $char4 >>data/file2
			@ start = $start + 4
		else if (($b2 == 1 && $b3 == 1) && ($start <= $num_char - 2)) then						# Check for CCVC unit eg. spAT
			echo RE $char1$char2$char3 $char1 $char2 $char3 >>data/file2
			@ start = $start + 3
		else if (($b2 == 1) && ($start <= $num_char - 1)) then								# Check for CCV unit eg. srI
			echo RE $char1$char2 $char1 $char2 >>data/file2
			@ start = $start + 2
		else
                        echo RE $char1 $char1 >>data/file2         # If C is not followed by another CV or V displays C unit alone. eg. mu l hhanq in aartidata where l is displayed as it is.
                        @ start++
                endif
	else if ($c0 == 1) then					# To check for CV followed by
		@ start1 = $start + 1
                set char2 = `cat phones |head -$start1 |tail -1`
                @ start2 = $start + 2
                set char3 = `cat phones |head -$start2 |tail -1`
                @ start3 = $start + 3
                set char4 = `cat phones |head -$start3 |tail -1`
                @ start4 = $start + 4
                set char5 = `cat phones |head -$start4 |tail -1`
                @ start5 = $start + 5
                set char6 = `cat phones |head -$start5 |tail -1`
                set c1 = 0
                set c2 = 0
                set c3 = 0
                set c4 = 0
                set c1 = `grep -w $char2 $3 |wc -l`     # Checks 2nd char is mei
                set c2 = `grep -w $char3 $3 |wc -l`     # Checks 3rd char is mei
                set c3 = `grep -w $char4 $3 |wc -l`     # Checks 4th char is mei
                set c4 = `grep -w $char5 $3 |wc -l`     # Checks 5th char is mei
                if (($c1 == 1 && $c2 == 1 && $c3 == 1 && $c4 == 1) && ($start <= $num_char - 4)) then		# Check for CVCCCC unit eg. varlfT
                        echo RE $char1$char2$char3$char4$char5 $char1 $char2 $char3 $char4 $char5 >>data/file2
                        @ start = $start + 5
                else if (($c1 == 1 && $c2 == 1 && $c3 == 1) && ($start <= $num_char - 3)) then			# Check for CVCCC unit eg. hends
                        echo RE $char1$char2$char3$char4 $char1 $char2 $char3 $char4 >>data/file2
                        @ start = $start + 4
                else if (($c1 == 1 && $c2 == 1) && ($start <= $num_char - 2)) then                             # Check for CVCC unit eg. varth
                        echo RE $char1$char2$char3 $char1 $char2 $char3 >>data/file2
                        @ start = $start + 3
                else if (($c1 == 1) && ($start <= $num_char - 1)) then                                         # Check for CVC unit eg. chak
                        echo RE $char1$char2$char3 $char1 $char2 $char3 >>data/file2
                        @ start = $start + 2
                else
                        echo RE $char1 $char1 >>data/file2         # If CV is followed by another CV or V displays CV unit alone.
                        @ start++
                endif
	else
		echo RE $char1 $char1 >>data/file2
		@ start++
	endif
end
HLEd data/file2 data/temp_syl.lab
